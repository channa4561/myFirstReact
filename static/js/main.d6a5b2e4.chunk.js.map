{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchText","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,kBCGFA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAACR,GAEzB,OADAS,QAAQC,IAAIV,GACJ,qBAAKC,UAAU,YAAf,SACPD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAChB,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,UCLjBQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAd,UAAY,SACZe,KAAK,SACLF,YAAaA,EACbG,SAAYF,MCmCDG,G,wDApCb,aACC,IAAD,8BACE,gBAaJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,WAAaF,EAAEG,OAAOC,SAbnC,EAAKC,MAAQ,CACXb,SAAW,GACXU,WAAa,IAJjB,E,qDAQF,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAWkB,S,oBAO7C,WAAU,IAAD,EAC2BC,KAAKN,MAA7Bb,EADH,EACGA,SAASU,EADZ,EACYA,WACXU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAAcC,SAASb,EAAWY,kBAErG,OACE,sBAAKhC,UAAU,MAAf,UACE,mDACF,cAAC,EAAD,CACIa,YAAY,cACZC,aAAgBe,KAAKf,eAGvB,cAAC,EAAD,CAAUJ,SAAYoB,EAAtB,sB,GAhCYI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d6a5b2e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='Monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=160x160`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n\r\n)\r\n","import react from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\nconsole.log(props);\r\nreturn (<div className='card-list' >\r\n{props.monsters.map(monster =>(\r\n           <Card key={monster.id} monster = {monster}/>\r\n      ) )} \r\n</div>)\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ( {placeholder, handleChange}) => (\r\n    <input  \r\n    className = 'search'\r\n    type='search' \r\n    placeholder={placeholder}  \r\n    onChange = {handleChange}/> \r\n\r\n)\r\n\r\n","import React , {Component} from 'react';\nimport logo from './logo.svg';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nimport './App.css'\n\nclass App extends Component {\n  constructor()\n  {\n    super();\n    this.state = {\n      monsters : [],\n      searchText : ''\n    };\n  }\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then (response => response.json())\n  .then (users => this.setState({ monsters : users }));\n}\n\nhandleChange = e => {\n  this.setState({searchText : e.target.value});  \n};\n\nrender (){\n    const { monsters,searchText}  = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchText.toLowerCase()));\n\n  return (\n    <div className=\"App\">\n      <h1> Moster Rolodex  </h1>\n    <SearchBox\n        placeholder='Search ....'  \n        handleChange = {this.handleChange}\n    \n    />\n      <CardList monsters = {filteredMonsters  }> </CardList>\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React , {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}